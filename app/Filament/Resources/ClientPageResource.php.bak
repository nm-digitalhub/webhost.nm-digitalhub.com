<?php

declare(strict_types=1);

namespace App\Filament\Resources;

use App\Filament\Resources\ClientPageResource\Pages;
use App\Models\ClientPage;
use App\Models\Role;
use Filament\Forms;
use Filament\Forms\Components\RichEditor;
use Filament\Forms\Form;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Table;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Support\Str;

class ClientPageResource extends Resource
{
    protected static ?string $model = ClientPage::class;

    protected static ?string $navigationIcon = 'heroicon-o-document-text';

    protected static ?string $navigationGroup = 'ניהול פאנל לקוחות';

    protected static ?string $modelLabel = 'עמוד לקוח';

    protected static ?string $pluralModelLabel = 'עמודי לקוח';

    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                Forms\Components\Tabs::make('page_tabs')
                    ->tabs([
                        Forms\Components\Tabs\Tab::make('content')
                            ->label('תוכן')
                            ->schema([
                                Forms\Components\TextInput::make('title')
                                    ->label('כותרת')
                                    ->required()
                                    ->maxLength(255)
                                    ->live()
                                    ->afterStateUpdated(function (string $state, callable $set) {
                                        $set('slug', Str::slug($state));

                                        if (! $set('meta_title')) {
                                            $set('meta_title', $state);
                                        }
                                    }),

                                Forms\Components\TextInput::make('slug')
                                    ->label('Slug')
                                    ->required()
                                    ->unique(ignoreRecord: true)
                                    ->maxLength(255),

                                Forms\Components\Select::make('module_id')
                                    ->label('מודול')
                                    ->relationship('module', 'name')
                                    ->searchable()
                                    ->preload(),

                                Forms\Components\Select::make('layout')
                                    ->label('תבנית')
                                    ->options([
                                        'default' => 'ברירת מחדל',
                                        'full-width' => 'רוחב מלא',
                                        'sidebar-left' => 'סרגל צד שמאל',
                                        'sidebar-right' => 'סרגל צד ימין',
                                    ])
                                    ->default('default'),

                                Forms\Components\Select::make('status')
                                    ->label('סטטוס')
                                    ->options([
                                        'published' => 'פורסם',
                                        'draft' => 'טיוטה',
                                        'archived' => 'בארכיון',
                                    ])
                                    ->default('published')
                                    ->required(),

                                RichEditor::make('content')
                                    ->label('תוכן')
                                    ->fileAttachmentsDisk('public')
                                    ->fileAttachmentsDirectory('uploads')
                                    ->columnSpanFull(),
                            ]),

                        Forms\Components\Tabs\Tab::make('seo')
                            ->label('קידום אתרים')
                            ->schema([
                                Forms\Components\TextInput::make('meta_title')
                                    ->label('כותרת Meta')
                                    ->maxLength(255),

                                Forms\Components\Textarea::make('meta_description')
                                    ->label('תיאור Meta')
                                    ->maxLength(255),

                                Forms\Components\TextInput::make('meta_keywords')
                                    ->label('מילות מפתח Meta')
                                    ->maxLength(255),
                            ]),

                        Forms\Components\Tabs\Tab::make('menu')
                            ->label('תפריט')
                            ->schema([
                                Forms\Components\Toggle::make('show_in_menu')
                                    ->label('הצג בתפריט')
                                    ->default(false),

                                Forms\Components\TextInput::make('menu_position')
                                    ->label('מיקום בתפריט')
                                    ->numeric()
                                    ->default(0)
                                    ->visible(fn (Forms\Get $get): bool => $get('show_in_menu')),

                                Forms\Components\TextInput::make('menu_icon')
                                    ->label('אייקון תפריט')
                                    ->helperText('שם האייקון של Heroicon (למשל: heroicon-o-document-text)')
                                    ->maxLength(255)
                                    ->visible(fn (Forms\Get $get): bool => $get('show_in_menu')),
                            ]),

                        Forms\Components\Tabs\Tab::make('visibility')
                            ->label('הרשאות')
                            ->schema([
                                Forms\Components\Select::make('visibility')
                                    ->label('גישה')
                                    ->options([
                                        'public' => 'ציבורי - נגיש לכולם',
                                        'private' => 'פרטי - דורש התחברות',
                                        'role_restricted' => 'מוגבל לתפקידים מסוימים',
                                    ])
                                    ->default('private')
                                    ->live(),

                                Forms\Components\CheckboxList::make('role_restrictions')
                                    ->label('הגבלת תפקידים')
                                    ->helperText('בחר את התפקידים שיכולים לצפות בעמוד זה')
                                    ->options(fn () => Role::all()->pluck('name', 'name')->toArray())
                                    ->columns(2)
                                    ->visible(fn (Forms\Get $get): bool => $get('visibility') === 'role_restricted'),
                            ]),

                        Forms\Components\Tabs\Tab::make('advanced')
                            ->label('מתקדם')
                            ->schema([
                                Forms\Components\Toggle::make('is_dynamic')
                                    ->label('עמוד דינמי')
                                    ->default(true)
                                    ->helperText('האם העמוד מוגש דינמית או מוגש מקובץ Blade קיים?'),

                                Forms\Components\KeyValue::make('metadata')
                                    ->label('מטא-דאטה')
                                    ->keyLabel('מפתח')
                                    ->valueLabel('ערך')
                                    ->columnSpanFull(),
                            ]),
                    ])
                    ->columnSpanFull(),
            ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                Tables\Columns\TextColumn::make('title')
                    ->label('כותרת')
                    ->searchable()
                    ->sortable(),

                Tables\Columns\TextColumn::make('slug')
                    ->label('Slug')
                    ->searchable(),

                Tables\Columns\BadgeColumn::make('status')
                    ->label('סטטוס')
                    ->colors([
                        'success' => 'published',
                        'warning' => 'draft',
                        'danger' => 'archived',
                    ]),

                Tables\Columns\BadgeColumn::make('visibility')
                    ->label('גישה')
                    ->colors([
                        'primary' => 'public',
                        'secondary' => 'private',
                        'warning' => 'role_restricted',
                    ]),

                Tables\Columns\IconColumn::make('show_in_menu')
                    ->label('בתפריט')
                    ->boolean(),

                Tables\Columns\TextColumn::make('module.name')
                    ->label('מודול')
                    ->sortable(),

                Tables\Columns\TextColumn::make('created_at')
                    ->label('נוצר בתאריך')
                    ->dateTime()
                    ->sortable()
                    ->toggleable(true),

                Tables\Columns\TextColumn::make('updated_at')
                    ->label('עודכן בתאריך')
                    ->dateTime()
                    ->sortable()
                    ->toggleable(true),
            ])
            ->filters([
                Tables\Filters\SelectFilter::make('status')
                    ->label('סטטוס')
                    ->options([
                        'published' => 'פורסם',
                        'draft' => 'טיוטה',
                        'archived' => 'בארכיון',
                    ]),

                Tables\Filters\SelectFilter::make('visibility')
                    ->label('גישה')
                    ->options([
                        'public' => 'ציבורי',
                        'private' => 'פרטי',
                        'role_restricted' => 'מוגבל לתפקידים',
                    ]),

                Tables\Filters\SelectFilter::make('module_id')
                    ->label('מודול')
                    ->relationship('module', 'name'),

                Tables\Filters\TernaryFilter::make('show_in_menu')
                    ->label('מוצג בתפריט'),
            ])
            ->actions([
                Tables\Actions\ActionGroup::make([
                    Tables\Actions\ViewAction::make(),
                    Tables\Actions\EditAction::make(),
                    Tables\Actions\DeleteAction::make(),
                    Tables\Actions\Action::make('preview')
                        ->label('תצוגה מקדימה')
                        ->icon('heroicon-o-eye')
                        ->url(fn (ClientPage $record): string => route('client.pages.show', ['slug' => $record->slug]))
                        ->openUrlInNewTab(),
                ]),
            ])
            ->bulkActions([
                Tables\Actions\BulkActionGroup::make([
                    Tables\Actions\DeleteBulkAction::make(),

                    Tables\Actions\BulkAction::make('publish')
                        ->label('פרסם')
                        ->icon('heroicon-o-check-circle')
                        ->action(function (Builder $query): void {
                            $query->update(['status' => 'published']);
                        }),

                    Tables\Actions\BulkAction::make('set_draft')
                        ->label('הפוך לטיוטה')
                        ->icon('heroicon-o-document')
                        ->action(function (Builder $query): void {
                            $query->update(['status' => 'draft']);
                        }),

                    Tables\Actions\BulkAction::make('archive')
                        ->label('העבר לארכיון')
                        ->icon('heroicon-o-archive-box')
                        ->color('danger')
                        ->action(function (Builder $query): void {
                            $query->update(['status' => 'archived']);
                        }),
                ]),
            ]);
    }

    public static function getRelations(): array
    {
        return [
            //
        ];
    }
public static function getWidgets(): array
    {
        return [];
    }

  

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListClientPages::class,
            'create' => Pages\CreateClientPage::class,
            'edit' => Pages\EditClientPage::class,
        ];
    }
}
