== PHPStan Analysis ==
Note: Using configuration file /var/www/vhosts/nm-digitalhub.com/webhost.nm-digitalhub.com/phpstan.neon.
namespace App\Providers\Filament;

use App\Filament\Pages;
use App\Filament\Widgets;
use Filament\Http\Middleware\Authenticate;
use Filament\Panel;
use Filament\PanelProvider;
use Filament\Support\Colors\Color;
use Filament\Navigation\NavigationGroup;
use Filament\Pages\Auth\Login;
use Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse;
use Illuminate\Cookie\Middleware\EncryptCookies;
use Illuminate\Foundation\Http\Middleware\VerifyCsrfToken;
use Illuminate\Routing\Middleware\SubstituteBindings;
use Illuminate\Session\Middleware\AuthenticateSession;
use Illuminate\Session\Middleware\StartSession;
use Illuminate\View\Middleware\ShareErrorsFromSession;
use Illuminate\Support\Facades\App;

class AdminPanelProvider extends PanelProvider
{
    public function panel(Panel $panel): Panel
    {
        return $panel
            ->id('admin')
            ->path('admin')
            ->login(Login::class)
            // Replace deprecated rtlWhen with proper layout direction
            ->direction(fn() => App::getLocale() === 'he' ? 'rtl' : 'ltr')
            ->colors([
                'primary' => Color::Teal,
                'gray' => Color::Slate,
            ])
            ->darkMode(true)
            ->discoverResources(in: app_path('Filament/Resources'), for: 'App\\Filament\\Resources')
            ->discoverPages(in: app_path('Filament/Pages'), for: 'App\\Filament\\Pages')
            ->pages([
                Pages\Dashboard::class,
            ])
            ->discoverWidgets(in: app_path('Filament/Widgets'), for: 'App\\Filament\\Widgets')
            ->widgets([
                Widgets\AccountWidget::class,
                Widgets\FilamentInfoWidget::class,
            ])
            ->navigationGroups([
                NavigationGroup::make()
                    ->label('ניהול מערכת')
                    ->icon('heroicon-o-cog'),
            ])
            ->middleware([
                EncryptCookies::class,
                AddQueuedCookiesToResponse::class,
                StartSession::class,
                AuthenticateSession::class,
                ShareErrorsFromSession::class,
                VerifyCsrfToken::class,
                SubstituteBindings::class,
            ])
            ->authMiddleware([
                Authenticate::class,
            ])
            ->authGuard('web')
            ->brandName('NM DigitalHUB')
            ->sidebarCollapsibleOnDesktop(true);
    }
}
ParseError thrown in /var/www/vhosts/nm-digitalhub.com/webhost.nm-digitalhub.com/app/Console/Commands/LaravelProjectFixer.php on line 24 while loading bootstrap file /var/www/vhosts/nm-digitalhub.com/webhost.nm-digitalhub.com/vendor/larastan/larastan/bootstrap.php: syntax error, unexpected token "\"

== Rector Fixing ==
   0/480 [░░░░░░░░░░░░░░░░░░░░░░░░░░░░]   0%[1G[2K  16/480 [░░░░░░░░░░░░░░░░░░░░░░░░░░░░]   3%[1G[2K  32/480 [▓░░░░░░░░░░░░░░░░░░░░░░░░░░░]   6%[1G[2K  48/480 [▓▓░░░░░░░░░░░░░░░░░░░░░░░░░░]  10%[1G[2K  64/480 [▓▓▓░░░░░░░░░░░░░░░░░░░░░░░░░]  13%[1G[2K  80/480 [▓▓▓▓░░░░░░░░░░░░░░░░░░░░░░░░]  16%[1G[2K  96/480 [▓▓▓▓▓░░░░░░░░░░░░░░░░░░░░░░░]  20%[1G[2K 112/480 [▓▓▓▓▓▓░░░░░░░░░░░░░░░░░░░░░░]  23%[1G[2K 144/480 [▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░░░░░░░]  30%[1G[2K 160/480 [▓▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░░░░░░]  33%[1G[2K 176/480 [▓▓▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░░░░░]  36%[1G[2K 192/480 [▓▓▓▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░░░░]  40%[1G[2K 208/480 [▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░░░]  43%[1G[2K 240/480 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░]  50%[1G[2K 336/480 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░░░░]  70%[1G[2K 384/480 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░]  80%[1G[2K 480/480 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓] 100%
7 files with changes
====================

1) app/Console/Commands/CheckPHPSyntax.php:106

    ---------- begin diff ----------
@@ @@
         }
         elseif (Str::contains($error, 'unexpected') && Str::contains($error, 'expecting')) {
             // Fix missing semicolons (common issue)
-            if (Str::contains($error, 'expecting ";"')) {
-                // Try to find the line with the error
-                if (preg_match('/on line (\d+)/', $error, $matches)) {
-                    $lineNumber = (int)$matches[1];
-                    $lines = explode("\n", $content);
-
-                    if (isset($lines[$lineNumber - 1])) {
-                        $line = $lines[$lineNumber - 1];
-                        if (!Str::endsWith(trim($line), ';') && !Str::endsWith(trim($line), '{') && !Str::endsWith(trim($line), '}')) {
-                            $lines[$lineNumber - 1] = rtrim($line) . ';';
-                            $content = implode("\n", $lines);
-                            $fixed = true;
-                            $this->info("Fixed missing semicolon on line {$lineNumber} in {$file}");
-                        }
+            // Try to find the line with the error
+            if (Str::contains($error, 'expecting ";"') && preg_match('/on line (\d+)/', (string) $error, $matches)) {
+                $lineNumber = (int)$matches[1];
+                $lines = explode("\n", $content);
+                if (isset($lines[$lineNumber - 1])) {
+                    $line = $lines[$lineNumber - 1];
+                    if (!Str::endsWith(trim($line), ';') && !Str::endsWith(trim($line), '{') && !Str::endsWith(trim($line), '}')) {
+                        $lines[$lineNumber - 1] = rtrim($line) . ';';
+                        $content = implode("\n", $lines);
+                        $fixed = true;
+                        $this->info("Fixed missing semicolon on line {$lineNumber} in {$file}");
                     }
                 }
             }
    ----------- end diff -----------

Applied rules:
 * CombineIfRector
 * NullToStrictStringFuncCallArgRector


2) app/Console/Commands/CleanupFilamentClasses.php:67

    ---------- begin diff ----------
@@ @@
         $content = preg_replace('/^<\?php\s+<\?php/', '<?php', (string) $content);

         // Extract namespace, imports and class content from both parts
-        if (preg_match('/namespace\s+([^;]+);(.*?)class\s+AdminPanelProvider.*?{(.*?)}\s*namespace/s', $content, $firstMatch) &&
-            preg_match('/namespace\s+([^;]+);(.*?)class\s+AdminPanelProvider.*?{(.*?)}/s', $content, $secondMatch, 0, strpos($content, 'namespace', 10))) {
+        if (preg_match('/namespace\s+([^;]+);(.*?)class\s+AdminPanelProvider.*?{(.*?)}\s*namespace/s', (string) $content, $firstMatch) &&
+            preg_match('/namespace\s+([^;]+);(.*?)class\s+AdminPanelProvider.*?{(.*?)}/s', (string) $content, $secondMatch, 0, strpos((string) $content, 'namespace', 10))) {

             // Extract imports from both parts
             preg_match_all('/use\s+([^;]+);/', $firstMatch[2], $firstImports);
@@ @@
         }

         // If regex didn't match, just remove duplicate PHP tags and namespaces
-        $content = preg_replace('/(<\?php.*?namespace\s+[^;]+;)/s', '<?php', $content, 1);
+        $content = preg_replace('/(<\?php.*?namespace\s+[^;]+;)/s', '<?php', (string) $content, 1);

-        return preg_replace('/namespace\s+([^;]+);/', 'namespace App\\Providers\\Filament;', $content, 1);
+        return preg_replace('/namespace\s+([^;]+);/', 'namespace App\\Providers\\Filament;', (string) $content, 1);
     }

     private function checkFilamentPages()
    ----------- end diff -----------

Applied rules:
 * NullToStrictStringFuncCallArgRector


3) app/Console/Commands/FixBladeViews.php:42

    ---------- begin diff ----------
@@ @@
         foreach ($files as $filePath) {
             $content = File::get($filePath);
             $originalContent = $content;
-            $fileName = basename($filePath);
+            $fileName = basename((string) $filePath);

             // Replace @section('content') with x-filament.layouts.app if using admin layout
             if (Str::contains($content, "@section('content')") &&
@@ @@
             }

             // Replace hardcoded strings with localization function
-            if (preg_match_all('/(?<![_\'"])([א-ת]{2,}|[A-Za-z]{2,}\s+[A-Za-z]{2,})(?![_\'"])/', $content, $matches)) {
+            if (preg_match_all('/(?<![_\'"])([א-ת]{2,}|[A-Za-z]{2,}\s+[A-Za-z]{2,})(?![_\'"])/', (string) $content, $matches)) {
                 foreach ($matches[0] as $match) {
                     // Skip if it's already in a translation helper
                     if (preg_match('/__([\'"]).+?\\1/', $match)) {
@@ @@
                 $content = preg_replace(
                     '/(<html[^>]*|<body[^>]*|<div class="container"[^>]*)>/',
                     '$1 dir="{{ app()->getLocale() === \'he\' ? \'rtl\' : \'ltr\' }}">',
-                    $content
+                    (string) $content
                 );
                 $this->info("Added dynamic dir attribute for RTL support in {$fileName}");
             }
    ----------- end diff -----------

Applied rules:
 * NullToStrictStringFuncCallArgRector


4) app/Console/Commands/FixFilamentResources.php:40

    ---------- begin diff ----------
@@ @@
         foreach ($resourceFiles as $filePath) {
             $content = File::get($filePath);
             $originalContent = $content;
-            $fileName = basename($filePath);
+            $fileName = basename((string) $filePath);
             $className = pathinfo($fileName, PATHINFO_FILENAME);

             // Fix getPages() method if it returns strings instead of class references
@@ @@
                     $fixedPagesContent = preg_replace(
                         '/[\'"]create[\'"]\s*=>\s*[\'"][^\'"]+(\'|")/',
                         "'create' => Pages\\\\Create{$className}::route('/create')",
-                        $fixedPagesContent
+                        (string) $fixedPagesContent
                     );

                     $fixedPagesContent = preg_replace(
                         '/[\'"]edit[\'"]\s*=>\s*[\'"][^\'"]+(\'|")/',
                         "'edit' => Pages\\\\Edit{$className}::route('/{record}/edit')",
-                        $fixedPagesContent
+                        (string) $fixedPagesContent
                     );

                     // Replace the pages array with our fixed version
@@ @@
                 $content = preg_replace(
                     '/namespace[^;]+;\s+/',
                     "$0\nuse Illuminate\Support\Facades\App;\n",
-                    $content
+                    (string) $content
                 );
             }

@@ @@

         // Check for string paths in resource registration
         if (Str::contains($content, ["->resources(['", "->resources(['"]) ||
-            preg_match('/->resources\(\[\s*[\'"]/', $content)) {
+            preg_match('/->resources\(\[\s*[\'"]/', (string) $content)) {

             $this->warn("Found string-based resource paths in AdminPanelProvider.");
             $this->info("Consider using ->discoverResources(in: app_path('Filament/Resources'), for: 'App\\\\Filament\\\\Resources') instead.");
    ----------- end diff -----------

Applied rules:
 * NullToStrictStringFuncCallArgRector


5) app/Console/Commands/FixLivewireComponents.php:52

    ---------- begin diff ----------
@@ @@
             // Check if namespace is correct
             if (!Str::contains($content, "namespace {$namespace};")) {
                 // Extract existing namespace
-                preg_match('/namespace\s+([^;]+);/', $content, $matches);
+                preg_match('/namespace\s+([^;]+);/', (string) $content, $matches);

                 if (isset($matches[1])) {
                     $content = str_replace(
@@ @@
                     $content = preg_replace(
                         '/^<\?php\s+/s',
                         "<?php\n\nnamespace {$namespace};\n\n",
-                        $content
+                        (string) $content
                     );
                     $this->info("Added namespace to {$file->getFilename()}");
                 }
@@ @@
                 $content = preg_replace(
                     '/namespace[^;]+;\s+/',
                     "$0\nuse Livewire\Component;\n",
-                    $content
+                    (string) $content
                 );
                 $this->info("Added Component import to {$file->getFilename()}");
             }
@@ @@
                 $content = preg_replace(
                     '/namespace[^;]+;\s+/',
                     "$0\nuse Livewire\WithPagination;\n",
-                    $content
+                    (string) $content
                 );

                 // Add the trait if not already present
@@ @@
                     $content = preg_replace(
                         '/(class\s+' . $className . '\s+extends\s+Component\s*{)/',
                         "$1\n    use WithPagination;\n",
-                        $content
+                        (string) $content
                     );
                 }

@@ @@
                     $content = preg_replace(
                         '/(class\s+' . $className . '\s+extends\s+Component\s*{)/',
                         "$1\n    protected \$paginationTheme = 'tailwind';",
-                        $content
+                        (string) $content
                     );
                 }

@@ @@
                 $content = preg_replace(
                     '/(}\s*)$/',
                     "\n    public function render()\n    {\n        return view('livewire.{$viewPath}');\n    }\n$1",
-                    $content
+                    (string) $content
                 );
                 $this->info("Added render method to {$file->getFilename()}");
             }
@@ @@
                 $content = preg_replace(
                     '/return\s+view\([^)]+\)\s*->layout\([^)]+\);/',
                     'return view(\'livewire.' . Str::kebab(basename($directory)) . '.' . Str::kebab($className) . '\');',
-                    $content
+                    (string) $content
                 );
                 $this->info("Removed hardcoded ->layout() in {$file->getFilename()}");
             }
    ----------- end diff -----------

Applied rules:
 * NullToStrictStringFuncCallArgRector


6) app/Console/Commands/FixLivewireNamespaces.php:133

    ---------- begin diff ----------
@@ @@

             // Check for class name matching file name
             $className = $file->getFilenameWithoutExtension();
-            if (!preg_match('/class\s+' . preg_quote($className) . '\s+extends\s+Component/i', $content)) {
+            if (!preg_match('/class\s+' . preg_quote($className) . '\s+extends\s+Component/i', (string) $content)) {
                 $this->warn("Class name might not match file name in {$fileName}");

                 // If we can detect the actual class name, we can fix it
-                if (preg_match('/class\s+([a-zA-Z0-9_]+)\s+extends\s+Component/i', $content, $matches)) {
+                if (preg_match('/class\s+([a-zA-Z0-9_]+)\s+extends\s+Component/i', (string) $content, $matches)) {
                     $actualClassName = $matches[1];
                     if ($actualClassName !== $className) {
                         $content = str_replace(
    ----------- end diff -----------

Applied rules:
 * NullToStrictStringFuncCallArgRector


7) app/Providers/RouteServiceProvider.php:22

    ---------- begin diff ----------
@@ @@
      */
     public function boot(): void
     {
-        RateLimiter::for('api', function (Request $request) {
-            return Limit::perMinute(60)->by($request->user()?->id ?: $request->ip());
-        });
+        RateLimiter::for('api', fn(Request $request) => Limit::perMinute(60)->by($request->user()?->id ?: $request->ip()));

         $this->routes(function () {
             Route::middleware('api')
    ----------- end diff -----------

Applied rules:
 * ClosureToArrowFunctionRector


 [ERROR] Could not process "app/Console/Kernel.php" file, due to:                   
         "Syntax error, unexpected '<', Namespace declaration statement has to be   
         the very first statement in the script". On line: 2                        

 [ERROR] Could not process "app/Console/Commands/LaravelProjectFixer.php" file, due 
         to:                                                                        
         "Syntax error, unexpected T_NS_SEPARATOR, Syntax error, unexpected '`',    
         Syntax error, unexpected EOF, expecting '`', Namespace declaration         
         statement has to be the very first statement in the script". On line: 24   

 [ERROR] Could not process "app/Console/Commands/FixFilamentPageRegistrations.php"  
         file, due to:                                                              
         "Syntax error, unexpected '<', Syntax error, unexpected T_NS_SEPARATOR,    
         Syntax error, unexpected T_NS_SEPARATOR, Syntax error, unexpected          
         T_NS_SEPARATOR, Syntax error, unexpected ')', expecting '(', Syntax error, 
         unexpected T_NS_SEPARATOR, expecting ',' or ']' or ')', Syntax error,      
         unexpected ')', expecting ']', Syntax error, unexpected ',', Namespace     
         declaration statement has to be the very first statement in the script". On
         line: 2                                                                    

 [ERROR] Could not process "app/Filament/Widgets/FilamentInfoWidget.php" file, due  
         to:                                                                        
         "Syntax error, unexpected '<', Syntax error, unexpected '<', Namespace     
         declaration statement has to be the very first statement in the script". On
         line: 2                                                                    

 [ERROR] Could not process "app/Filament/Widgets/AccountWidget.php" file, due to:   
         "Syntax error, unexpected '<', Namespace declaration statement has to be   
         the very first statement in the script". On line: 2                        

 [ERROR] Could not process                                                          
         "database/migrations_backup_20250504075753/2025_05_04_070319_create_persona
         l_access_tokens_table.php" file, due to:                                   
         "Syntax error, unexpected T_IF, expecting ';' or '{'". On line: 13         

 [ERROR] Could not process                                                          
         "database/migrations_backup_20250504075753/2025_05_01_195611_create_role_us
         er_table.php" file, due to:                                                
         "Syntax error, unexpected T_IF, expecting ';' or '{'". On line: 13         

 [ERROR] Could not process                                                          
         "database/migrations_backup_20250504075753/2025_05_01_195534_create_roles_t
         able.php" file, due to:                                                    
         "Syntax error, unexpected T_IF, expecting ';' or '{'". On line: 13         

 [ERROR] Could not process                                                          
         "database/migrations_backup_20250504075753/2025_05_01_195238_create_persona
         l_access_tokens_table.php" file, due to:                                   
         "Syntax error, unexpected T_IF, expecting ';' or '{'". On line: 13         

 [ERROR] Could not process                                                          
         "database/migrations_backup_20250504075753/0001_01_01_000002_create_jobs_ta
         ble.php" file, due to:                                                     
         "Syntax error, unexpected T_IF, expecting ';' or '{', Syntax error,        
         unexpected '}', expecting EOF". On line: 13                                

 [ERROR] Could not process                                                          
         "database/migrations_backup_20250504075753/0001_01_01_000000_create_users_t
         able.php" file, due to:                                                    
         "Syntax error, unexpected T_IF, expecting ';' or '{', Syntax error,        
         unexpected '}', expecting EOF". On line: 13                                


== Laravel Cache Clear ==
namespace App\Providers\Filament;

use App\Filament\Pages;
use App\Filament\Widgets;
use Filament\Http\Middleware\Authenticate;
use Filament\Panel;
use Filament\PanelProvider;
use Filament\Support\Colors\Color;
use Filament\Navigation\NavigationGroup;
use Filament\Pages\Auth\Login;
use Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse;
use Illuminate\Cookie\Middleware\EncryptCookies;
use Illuminate\Foundation\Http\Middleware\VerifyCsrfToken;
use Illuminate\Routing\Middleware\SubstituteBindings;
use Illuminate\Session\Middleware\AuthenticateSession;
use Illuminate\Session\Middleware\StartSession;
use Illuminate\View\Middleware\ShareErrorsFromSession;
use Illuminate\Support\Facades\App;

class AdminPanelProvider extends PanelProvider
{
    public function panel(Panel $panel): Panel
    {
        return $panel
            ->id('admin')
            ->path('admin')
            ->login(Login::class)
            // Replace deprecated rtlWhen with proper layout direction
            ->direction(fn() => App::getLocale() === 'he' ? 'rtl' : 'ltr')
            ->colors([
                'primary' => Color::Teal,
                'gray' => Color::Slate,
            ])
            ->darkMode(true)
            ->discoverResources(in: app_path('Filament/Resources'), for: 'App\\Filament\\Resources')
            ->discoverPages(in: app_path('Filament/Pages'), for: 'App\\Filament\\Pages')
            ->pages([
                Pages\Dashboard::class,
            ])
            ->discoverWidgets(in: app_path('Filament/Widgets'), for: 'App\\Filament\\Widgets')
            ->widgets([
                Widgets\AccountWidget::class,
                Widgets\FilamentInfoWidget::class,
            ])
            ->navigationGroups([
                NavigationGroup::make()
                    ->label('ניהול מערכת')
                    ->icon('heroicon-o-cog'),
            ])
            ->middleware([
                EncryptCookies::class,
                AddQueuedCookiesToResponse::class,
                StartSession::class,
                AuthenticateSession::class,
                ShareErrorsFromSession::class,
                VerifyCsrfToken::class,
                SubstituteBindings::class,
            ])
            ->authMiddleware([
                Authenticate::class,
            ])
            ->authGuard('web')
            ->brandName('NM DigitalHUB')
            ->sidebarCollapsibleOnDesktop(true);
    }
}

   ParseError 

  syntax error, unexpected token "\"

  at app/Console/Commands/LaravelProjectFixer.php:24
     20▕ {
     21▕     public function panel(Panel $panel): Panel
     22▕     {
     23▕         return $panel
  ➜  24▕             ->id(\'admin\')
     25▕             ->path(\'admin\')
     26▕             ->colors([
     27▕                 \'primary\' => Color::Teal,
     28▕                 \'gray\' => Color::Slate,

      [2m+1 vendor frames [22m

  2   [internal]:0
      Composer\Autoload\ClassLoader::loadClass()
      [2m+5 vendor frames [22m

  8   artisan:16
      Illuminate\Foundation\Application::handleCommand()

namespace App\Providers\Filament;

use App\Filament\Pages;
use App\Filament\Widgets;
use Filament\Http\Middleware\Authenticate;
use Filament\Panel;
use Filament\PanelProvider;
use Filament\Support\Colors\Color;
use Filament\Navigation\NavigationGroup;
use Filament\Pages\Auth\Login;
use Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse;
use Illuminate\Cookie\Middleware\EncryptCookies;
use Illuminate\Foundation\Http\Middleware\VerifyCsrfToken;
use Illuminate\Routing\Middleware\SubstituteBindings;
use Illuminate\Session\Middleware\AuthenticateSession;
use Illuminate\Session\Middleware\StartSession;
use Illuminate\View\Middleware\ShareErrorsFromSession;
use Illuminate\Support\Facades\App;

class AdminPanelProvider extends PanelProvider
{
    public function panel(Panel $panel): Panel
    {
        return $panel
            ->id('admin')
            ->path('admin')
            ->login(Login::class)
            // Replace deprecated rtlWhen with proper layout direction
            ->direction(fn() => App::getLocale() === 'he' ? 'rtl' : 'ltr')
            ->colors([
                'primary' => Color::Teal,
                'gray' => Color::Slate,
            ])
            ->darkMode(true)
            ->discoverResources(in: app_path('Filament/Resources'), for: 'App\\Filament\\Resources')
            ->discoverPages(in: app_path('Filament/Pages'), for: 'App\\Filament\\Pages')
            ->pages([
                Pages\Dashboard::class,
            ])
            ->discoverWidgets(in: app_path('Filament/Widgets'), for: 'App\\Filament\\Widgets')
            ->widgets([
                Widgets\AccountWidget::class,
                Widgets\FilamentInfoWidget::class,
            ])
            ->navigationGroups([
                NavigationGroup::make()
                    ->label('ניהול מערכת')
                    ->icon('heroicon-o-cog'),
            ])
            ->middleware([
                EncryptCookies::class,
                AddQueuedCookiesToResponse::class,
                StartSession::class,
                AuthenticateSession::class,
                ShareErrorsFromSession::class,
                VerifyCsrfToken::class,
                SubstituteBindings::class,
            ])
            ->authMiddleware([
                Authenticate::class,
            ])
            ->authGuard('web')
            ->brandName('NM DigitalHUB')
            ->sidebarCollapsibleOnDesktop(true);
    }
}

   ParseError 

  syntax error, unexpected token "\"

  at app/Console/Commands/LaravelProjectFixer.php:24
     20▕ {
     21▕     public function panel(Panel $panel): Panel
     22▕     {
     23▕         return $panel
  ➜  24▕             ->id(\'admin\')
     25▕             ->path(\'admin\')
     26▕             ->colors([
     27▕                 \'primary\' => Color::Teal,
     28▕                 \'gray\' => Color::Slate,

      [2m+1 vendor frames [22m

  2   [internal]:0
      Composer\Autoload\ClassLoader::loadClass()
      [2m+5 vendor frames [22m

  8   artisan:16
      Illuminate\Foundation\Application::handleCommand()

namespace App\Providers\Filament;

use App\Filament\Pages;
use App\Filament\Widgets;
use Filament\Http\Middleware\Authenticate;
use Filament\Panel;
use Filament\PanelProvider;
use Filament\Support\Colors\Color;
use Filament\Navigation\NavigationGroup;
use Filament\Pages\Auth\Login;
use Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse;
use Illuminate\Cookie\Middleware\EncryptCookies;
use Illuminate\Foundation\Http\Middleware\VerifyCsrfToken;
use Illuminate\Routing\Middleware\SubstituteBindings;
use Illuminate\Session\Middleware\AuthenticateSession;
use Illuminate\Session\Middleware\StartSession;
use Illuminate\View\Middleware\ShareErrorsFromSession;
use Illuminate\Support\Facades\App;

class AdminPanelProvider extends PanelProvider
{
    public function panel(Panel $panel): Panel
    {
        return $panel
            ->id('admin')
            ->path('admin')
            ->login(Login::class)
            // Replace deprecated rtlWhen with proper layout direction
            ->direction(fn() => App::getLocale() === 'he' ? 'rtl' : 'ltr')
            ->colors([
                'primary' => Color::Teal,
                'gray' => Color::Slate,
            ])
            ->darkMode(true)
            ->discoverResources(in: app_path('Filament/Resources'), for: 'App\\Filament\\Resources')
            ->discoverPages(in: app_path('Filament/Pages'), for: 'App\\Filament\\Pages')
            ->pages([
                Pages\Dashboard::class,
            ])
            ->discoverWidgets(in: app_path('Filament/Widgets'), for: 'App\\Filament\\Widgets')
            ->widgets([
                Widgets\AccountWidget::class,
                Widgets\FilamentInfoWidget::class,
            ])
            ->navigationGroups([
                NavigationGroup::make()
                    ->label('ניהול מערכת')
                    ->icon('heroicon-o-cog'),
            ])
            ->middleware([
                EncryptCookies::class,
                AddQueuedCookiesToResponse::class,
                StartSession::class,
                AuthenticateSession::class,
                ShareErrorsFromSession::class,
                VerifyCsrfToken::class,
                SubstituteBindings::class,
            ])
            ->authMiddleware([
                Authenticate::class,
            ])
            ->authGuard('web')
            ->brandName('NM DigitalHUB')
            ->sidebarCollapsibleOnDesktop(true);
    }
}

   ParseError 

  syntax error, unexpected token "\"

  at app/Console/Commands/LaravelProjectFixer.php:24
     20▕ {
     21▕     public function panel(Panel $panel): Panel
     22▕     {
     23▕         return $panel
  ➜  24▕             ->id(\'admin\')
     25▕             ->path(\'admin\')
     26▕             ->colors([
     27▕                 \'primary\' => Color::Teal,
     28▕                 \'gray\' => Color::Slate,

      [2m+1 vendor frames [22m

  2   [internal]:0
      Composer\Autoload\ClassLoader::loadClass()
      [2m+5 vendor frames [22m

  8   artisan:16
      Illuminate\Foundation\Application::handleCommand()

namespace App\Providers\Filament;

use App\Filament\Pages;
use App\Filament\Widgets;
use Filament\Http\Middleware\Authenticate;
use Filament\Panel;
use Filament\PanelProvider;
use Filament\Support\Colors\Color;
use Filament\Navigation\NavigationGroup;
use Filament\Pages\Auth\Login;
use Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse;
use Illuminate\Cookie\Middleware\EncryptCookies;
use Illuminate\Foundation\Http\Middleware\VerifyCsrfToken;
use Illuminate\Routing\Middleware\SubstituteBindings;
use Illuminate\Session\Middleware\AuthenticateSession;
use Illuminate\Session\Middleware\StartSession;
use Illuminate\View\Middleware\ShareErrorsFromSession;
use Illuminate\Support\Facades\App;

class AdminPanelProvider extends PanelProvider
{
    public function panel(Panel $panel): Panel
    {
        return $panel
            ->id('admin')
            ->path('admin')
            ->login(Login::class)
            // Replace deprecated rtlWhen with proper layout direction
            ->direction(fn() => App::getLocale() === 'he' ? 'rtl' : 'ltr')
            ->colors([
                'primary' => Color::Teal,
                'gray' => Color::Slate,
            ])
            ->darkMode(true)
            ->discoverResources(in: app_path('Filament/Resources'), for: 'App\\Filament\\Resources')
            ->discoverPages(in: app_path('Filament/Pages'), for: 'App\\Filament\\Pages')
            ->pages([
                Pages\Dashboard::class,
            ])
            ->discoverWidgets(in: app_path('Filament/Widgets'), for: 'App\\Filament\\Widgets')
            ->widgets([
                Widgets\AccountWidget::class,
                Widgets\FilamentInfoWidget::class,
            ])
            ->navigationGroups([
                NavigationGroup::make()
                    ->label('ניהול מערכת')
                    ->icon('heroicon-o-cog'),
            ])
            ->middleware([
                EncryptCookies::class,
                AddQueuedCookiesToResponse::class,
                StartSession::class,
                AuthenticateSession::class,
                ShareErrorsFromSession::class,
                VerifyCsrfToken::class,
                SubstituteBindings::class,
            ])
            ->authMiddleware([
                Authenticate::class,
            ])
            ->authGuard('web')
            ->brandName('NM DigitalHUB')
            ->sidebarCollapsibleOnDesktop(true);
    }
}

   ParseError 

  syntax error, unexpected token "\"

  at app/Console/Commands/LaravelProjectFixer.php:24
     20▕ {
     21▕     public function panel(Panel $panel): Panel
     22▕     {
     23▕         return $panel
  ➜  24▕             ->id(\'admin\')
     25▕             ->path(\'admin\')
     26▕             ->colors([
     27▕                 \'primary\' => Color::Teal,
     28▕                 \'gray\' => Color::Slate,

      [2m+1 vendor frames [22m

  2   [internal]:0
      Composer\Autoload\ClassLoader::loadClass()
      [2m+5 vendor frames [22m

  8   artisan:16
      Illuminate\Foundation\Application::handleCommand()

== DONE ==
